spring:
  application:
    name: ddok

  datasource:
    url: jdbc:postgresql://deepdirect.chy20mawqoe9.ap-northeast-2.rds.amazonaws.com:5432/ddok
    driver-class-name: org.postgresql.Driver
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: UTC

  flyway:
    enabled: false
#    locations: classpath:db/migration
#    baseline-on-migrate: true
#    out-of-order: false
#    clean-disabled: true

  data:
    redis:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}
      password: ${SPRING_REDIS_PASSWORD}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  elasticsearch:
    uris: http://elasticsearch:9200

  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket: my-shop-image-bucket

sentry:
  dsn: ${SENTRY_DSN}
  traces-sample-rate: 0.1
  debug: false
  environment: production
  release: 1.0.0

logging:
  level:
    io.sentry: INFO
    com.deepdirect: DEBUG

oauth:
  kakao:
    client-id: ${KAKAO_CLIENT_ID}
    client-secret: ${KAKAO_CLIENT_SECRET}
    scope: profile_nickname,profile_image
    redirect-uri: https://api.deepdirect.site/api/auth/signin/kakao/callback

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration: 86400000
  refresh-token-expiration: 1209600000

coolsms:
  api:
    key: ${COOLSMS_KEY}
    secret: ${COOLSMS_SECRET}
    number: ${COOLSMS_NUMBER}

ai:
  maxTokens: 800
  temperature: 0.7
  topP: 0.8
  topK: 0
  clova:
    streamUrl: https://clovastudio.stream.ntruss.com
    model: HCX-005
    studio-api-key: ${CLOVA_STUDIO_API_KEY}

app:
  base-url: https://api.deepdirect.site
  techstack:
    defaults: Spring Boot, Spring Data JPA, Spring Security, Java, Kotlin, Python, Node.js, Express, JavaScript, TypeScript, React, Next.js, Vue.js, Angular, MySQL, PostgreSQL, Redis, MongoDB, Docker, Kubernetes, AWS, GitHub Actions, Go, Rust, C#, .NET, PHP, Ruby, Scala, Dart, C/C++, Spring WebFlux, Spring Cloud, Spring Batch, Hibernate, MyBatis, Micronaut, Quarkus, Vert.x, jOOQ, Maven, Gradle, NestJS, Fastify, Koa, Hapi, TypeORM, Prisma, Sequelize, Django, Flask, FastAPI, Celery, Svelte, SvelteKit, Nuxt.js, Remix, Astro, Tailwind CSS, SCSS, Vite, Webpack, Rollup, SWC, Babel, React Native, Flutter, SwiftUI, Jetpack Compose, Oracle, MariaDB, SQLite, Microsoft SQL Server, Cassandra, DynamoDB, Neo4j, ClickHouse, InfluxDB, TimescaleDB, OpenSearch, Meilisearch, Typesense, MinIO, Apache Kafka, RabbitMQ, NATS, Apache Pulsar, GraphQL, Apollo, gRPC, tRPC, NGINX, Traefik, Envoy, Kong, Prometheus, Grafana, Loki, ELK Stack, EFK Stack, OpenTelemetry, Jaeger, Zipkin, Sentry, Terraform, Ansible, Helm, Argo CD, Flux CD, Docker Compose, Jenkins, GitLab CI, CircleCI, GCP, Azure, Cloudflare, Vercel, Netlify, AWS Lambda, Cloud Run, Cloudflare Workers